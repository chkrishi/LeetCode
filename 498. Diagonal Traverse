# My own soln but TLE exceeded
class Solution:
    def findDiagonalOrder(self, mat: List[List[int]]) -> List[int]:
        mmax , nmax = len(mat[0]) , len(mat)
        #m -> width of matrix
        #n -> height of matrix
        #Even series -> increment i and decrement j
        #Odd series -> increment j and decrement i
        i,j = 1,0
        arr = []
        m,n = 2,2
        nm = 0
        arr.append(mat[0][0])
        arr.append(mat[0][1])
        arr.append(mat[1][0])
        while i < m and j < n and m < mmax and n < nmax:
            if nm % 2 == 0:
                while i < m and j < n:
                    i += 1
                    j -= 1 
                    j = 0 if j < 0 else j
                    arr.append(mat[i][j])
            else :
                while i < m and j < n:
                    i -= 1
                    i = 0 if i < 0 else i
                    j += 1
                    arr.append(mat[i][j])
            nm += 1
            m += 1
            n += 1
        arr.append(mat[mmax-1][nmax-1])
        return arr
____________________________________________________________________________________________________________________________________________________________________________________________________________________________
# Same approach as mine but efficient coding; from soln section
class Solution:
    def findDiagonalOrder(self, matrix: List[List[int]]) -> List[int]:
        if not matrix or not matrix[0]:
            return []

        m, n = len(matrix), len(matrix[0])
        result = []
        row = col = 0

        for _ in range(m * n):
            result.append(matrix[row][col])

            if (row + col) % 2 == 0:
                if col == n - 1:
                    row += 1
                elif row == 0:
                    col += 1
                else:
                    row -= 1
                    col += 1
            else:
                if row == m - 1:
                    col += 1
                elif col == 0:
                    row += 1
                else:
                    row += 1
                    col -= 1

        return result

#My own solution (Rejected)
class Solution(object):
    def clumsy(self, n):
        j = 0
        resval = n
        for i in range(n-1,0,-1):
            if j == 0:
                resval *= i
                j += 1
            elif j == 1:
                resval = resval // i
                j += 1
            elif j == 2:
                resval += i
                j += 1
            elif j == 3:
                resval -= i
                j = 0 
        return resval
_________________________________________________________________________________________________________
#CHATGPT solution(Didn't Work)
class Solution(object):
    def clumsy(self, n):
        j,val= 0,0
        arr = []
        arr.append(n)
        for i in range(n-1,0,-1):
            if j == 0:
                arr.append(arr.pop()*i)
            elif j == 1:
                arr.append(arr.pop()//i)
                j += 1
            elif j == 2:
                arr.append(i)
                j += 1
            elif j == 3:
                arr.append(-i)
                j = 0
            else:
                j = 0
        while len(arr):
            X = arr.pop()
            val += X
        return val
_______________________________________________________________________________________________________________________________________________      
#SOMONE ELSE'S GENIUS SOLUTION (Accepted)
class Solution(object):
    def clumsy(self, n):
        if n==1 or n==2:
            return n;
        if n==3:
            return 6;
        if n==4:
            return 7;
        if n%4==0:
            return n+1;
        if n%4==1 or n%4==2:
            return n+2;
        if n%4==3:
            return n-1;
        return 0;
        """
        :type n: int
        :rtype: int
        """
  __________________________________________________________________________________________________________________________________________________
#Actual way to solve it 
class Solution(object):
    def clumsy(self, n):
        val = 1  
        stack = [n]          
        for i in range(n-1, 0, -1):
            val %= 4  
            if val == 1:  
                stack[-1] *= i       
            elif val == 2:  
                if stack[-1] < 0:
                    stack[-1] = -(-stack[-1] // i)
                else:
                    stack[-1] = stack[-1] // i          
            elif val == 3:  
                stack.append(+i)    
            else: 
                stack.append(-i)
            val += 1  
        return sum(stack)

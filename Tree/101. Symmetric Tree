#Optimized soln -> Didn't use || Didn't submit
class Solution(object):
    def isSymmetric(self, root):
        """
        :type root: Optional[TreeNode]
        :rtype: bool
        """

        def isMatch(node1, node2):
            if not node1 and not node2:
                return True
            if not node1 or not node2:
                return False
            if node1.val != node2.val:
                return False
            return isMatch(node1.left, node2.right) and isMatch(node1.right, node2.left) 
        return isMatch(root.left,root.right)
        
===============================================================================================================================================================================

#My own solution
class Solution(object):
    def isSymmetric(self, root):
        if root is None:
            return True
        return self.helper(root.left, root.right)

    def helper(self, val1, val2):
        if val1 is None and val2 is None:
            return True
        if val1 is None or val2 is None:
            return False
        if val1.val != val2.val:
            return False
        return self.helper(val1.left, val2.right) and self.helper(val1.right, val2.left)

    def lef(self, root):
        current = root
        if current.left:
            current = current.left
        else:
            return None
        return current.val

    def rig(self, root):
        recurrent = root
        if recurrent.right:
            recurrent = recurrent.right
        else:
            return None
        return recurrent.val

#My solution but optimized by Chatgpt [Not Accepted as O(N) is required but i have used O(N^2)]
class Solution(object):
    def productExceptSelf(self, nums):
        arr = [1] * len(nums)
        # Creates an array of lenght of nums with all values as 1.
        for i in range(0,len(nums)):
            for j in range(0,len(nums)):
                if i != j:
                    arr[i] *= nums[j]
        return arr
________________________________________________________________________

#Solution using solution's section
class Solution(object):
    def productExceptSelf(self, nums):
        n = len(nums)
        pref = [1] * n
        l,m = 1,1
        for i in range(0,n):
            pref[i] = l
            l *= nums[i]
        for i in range(n-1,-1,-1):
            pref[i] *= m
            m *= nums[i]
        return pref
        

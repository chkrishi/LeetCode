#Same logic as my code but with optimizaion
class Solution(object):
    def pivotArray(self, nums, pivot):
        s1, s2, p = [], [], []
        for n in nums: 
            if n < pivot: s1.append(n)
            elif n > pivot: s2.append(n)
            else: p.append(n)
        answer = s1 + p + s2 
        return answer
_________________________________________________________________________________________________________
#My own code with 0 optimization
class Solution(object):
    def pivotArray(self, nums, pivot):
        arr,arr1,arr2 = [],[],[]
        val = nums.count(pivot)
        while val > 0:
            arr.append(pivot)
            nums.remove(pivot)
            val -= 1
        #declared after removal as the len of nums changes 
        i = 0
        while i < len(nums):
            if nums[i] < pivot:
                arr1.append(nums[i])
            else :
                arr2.append(nums[i])
            i += 1
        return arr1+arr+arr2

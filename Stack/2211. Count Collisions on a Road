#My soln but failes
class Solution:
    def countCollisions(self, d: str) -> int:
        if len(d) == 0: return 0
        count = 0
        stk = [i for i in d]
        print(stk)
        i = 1
        while i < len(stk) :
            if stk[i-1] == 'R' and stk[i] == 'L':
                count += 2
                stk[i-1] = 'S'
                stk[i] = 'S'
            elif stk[i-1] == 'S' and stk[i] == 'L':
                count += 1
                stk[i] = 'S'
            elif stk[i-1] == 'R' and stk[i] == 'S':
                count += 1
                stk[i-1] = 'S'
            i += 1
        return count

_____________________________________________________________________________________________________________________________________________________________________________________________________________________________
#Solution from solution section
class Solution:
    def countCollisions(self, directions: str) -> int:
        collisions = 0
        st = [directions[0]]
        
        for i in range(1, len(directions)):
            d = directions[i]
            
            if st[-1] == 'R' and (d == 'L' or d == 'S'):
                st.pop()
                collisions += 2 if d == 'L' else 1
                
                while st and st[-1] == 'R':
                    st.pop()
                    collisions += 1
                    
                st.append('S')
                
            elif d == 'L' and st[-1] == 'S':
                collisions += 1
            elif d == 'S':
                st = [d]
            elif d == 'R':
                st.append(d)
        
        return collisions
